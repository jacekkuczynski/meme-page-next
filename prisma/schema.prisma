// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Post {
  id            Int           @id @unique @default(autoincrement())
  upvoteCount   Int
  downvoteCount Int
  comments      Comment[]
  memeTitle     String
  fileURL       String
  username      String
  userAvatarURL String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  userId        Int?
  User          User?         @relation(fields: [userId], references: [id])
  VotesByUser   VotesByUser[]

  @@index([userId])
}

model Comment {
  id             Int      @id @default(autoincrement())
  Post           Post?    @relation(fields: [postId], references: [id])
  postId         Int?
  commentContent String
  username       String
  date           DateTime @default(now())

  @@index([postId])
}

model User {
  id          Int           @id @default(autoincrement())
  userEmail   String
  Posts       Post[]
  VotesByUser VotesByUser[]
}

// model DislikedByUser {
//   Post   Post @relation(fields: [postId], references: [id])
//   postId Int
//   User   User @relation(fields: [userId], references: [id])
//   userId Int

//   @@id([postId, userId])
//   @@index([userId])
//   @@index([postId])
// }

model VotesByUser {
  Post       Post    @relation(fields: [postId], references: [id])
  postId     Int
  User       User    @relation(fields: [userId], references: [id])
  userId     Int
  isLiked    Boolean
  isDisliked Boolean

  @@id([postId, userId])
  @@index([userId])
  @@index([postId])
}
